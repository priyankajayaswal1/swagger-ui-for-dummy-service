{
  "swagger": "2.0",
  "info": {
    "title": "Azure AgFoodPlatform Data Plane Service",
    "description": "APIs documentation for Azure AgPlatform DataPlane Service.",
    "version": "2021-07-31-preview"
  },
  "paths": {
    "/farmers": {
      "get": {
        "tags": [
          "Farmers"
        ],
        "description": "Returns a paginated list of farmer resources.",
        "operationId": "Farmers_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ids",
            "description": "Ids of the resource.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "names",
            "description": "Names of the resource.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "propertyFilters",
            "description": "Filters on key-value pairs within the Properties object.\r\neg. \"{testKey} eq {testValue}\".",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "statuses",
            "description": "Statuses of the resource.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "minCreatedDateTime",
            "description": "Minimum creation date of resource (inclusive).",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "maxCreatedDateTime",
            "description": "Maximum creation date of resource (inclusive).",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "minLastModifiedDateTime",
            "description": "Minimum last modified date of resource (inclusive).",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "maxLastModifiedDateTime",
            "description": "Maximum last modified date of resource (inclusive).",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "$maxPageSize",
            "description": "Maximum number of items needed (inclusive).\r\nMinimum = 10, Maximum = 1000, Default value = 50.",
            "type": "integer",
            "format": "int32",
            "default": 50,
            "maximum": 1000,
            "minimum": 10
          },
          {
            "in": "query",
            "name": "$skipToken",
            "description": "Skip token for getting next set of results.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "2021-07-31-preview"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FarmerListResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Farmers_List": {
            "$ref": "./examples/Farmers_List.json"
          }
        }
      }
    }
  },
  "definitions": {
    "Farmer": {
      "description": "Schema of farmer resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique resource ID.",
          "type": "string",
          "readOnly": true
        },
        "eTag": {
          "description": "The ETag value to implement optimistic concurrency.",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "Status of the resource.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "createdDateTime": {
          "format": "date-time",
          "description": "Date-time when resource was created, sample format: yyyy-MM-ddTHH:mm:ssZ.",
          "type": "string",
          "readOnly": true
        },
        "modifiedDateTime": {
          "format": "date-time",
          "description": "Date-time when resource was last modified, sample format: yyyy-MM-ddTHH:mm:ssZ.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Name to identify resource.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "description": {
          "description": "Textual description of the resource.",
          "maxLength": 500,
          "minLength": 0,
          "type": "string"
        },
        "properties": {
          "description": "A collection of key value pairs that belongs to the resource.\r\nEach pair must not have a key greater than 50 characters\r\nand must not have a value greater than 150 characters.\r\nNote: A maximum of 25 key value pairs can be provided for a resource and only string,\r\nnumeral and datetime (yyyy-MM-ddTHH:mm:ssZ) values are supported.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "example": {
            "key1": "value1",
            "key2": 123.45
          }
        }
      },
      "additionalProperties": { }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Please provide a valid bearer token for authorized API calls. Note that you might need to clear your browser cache if you tried un-authenticated calls before."
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ],
  "host": "cors-anywhere.herokuapp.com",
  "basePath": "/https://prjayasw.farmbeats-dogfood.azure.net",
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ]
}